Library: org.openxtalk.avaudiorecorder.paulmcclernan

Type: library

Summary: This Library is a wrapper for AVAudioRecorder API for macOS & iOS.

Description:
This Library is a wrapper for AVAudioRecorder API for macOS & iOS.

>*Note:* This library is GPL3 licensed.
> Please share and share a like.

version: 0.2

author: Paul McClernan


Name: AVAudioRecorderRecord

Type: handler

Syntax: AVAudioRecorderRecord()

Summary: Starts recording to a file prepared by passing a filepath to AVAudioRecorderPrepare

Example: AVAudioRecorderRecord

Description: Starts recording to a file prepared by passing a filepath to AVAudioRecorderPrepare




Name: AVAudioRecorderPause

Type: handler

Syntax: AVAudioRecorderPause()

Summary: Pause Recording.

Example: AVAudioRecorderPause

Parameters: 

Description: Pauses AVAudioRecorder recording.




Name: AVAudioRecorderIsRecording

Type: handler

Syntax: AVAudioRecorderIsRecording()

Summary: Check if AVAudioRecorder is currently recording sound.

Example:  if AVAudioRecorderIsRecording() then AVAudioRecorderStop

Description: A function that returns a boolean which indicates if AVAudioRecorder is currently recording sound.




Name: AVAudioRecorderPrepareWithSettings

Type: handler

Syntax: AVAudioRecorderPrepareWithSettings(<pRecordToFilePath>,<pChannels>,<pRate>,<pBits>)

Summary: Prepare a file for AVAudioRecorder to record to

Example: AVAudioRecorderLoad "~/TestSoundRecording"

Parameters: 

pRecordToFilePath: the file path to a record audio to.

Returns: True is preperation was successful and recording to the file may begin.

Description: Initializes an AVAudioRecorder instance and prepares a file to record to.




Name: AVAudioRecorderCurrentTime

Type: handler

Syntax: AVAudioRecorderCurrentTime()

Summary: Returns the temporal location within a recording that the record curso.

Example:
function SecsToHrsMinSecs pSecs
   lock screen
   split pSecs by "."
   put trunc(pSecs[1]) into deltaTime
   put trunc(deltaTime div 3600) into h -- hours
   put trunc((deltaTime - (h * 3600)) / 60) into m -- minutes
   put deltaTime - (h * 3600) - (m * 60) into s -- seconds
   put format( "%01i:%02i:%02i", h, m, s ) &":"& pSecs[2] into displayTime
   return displayTime
end SecsToHrsMinSecs
put "The recording is currently " & SecsToHrsMinSecs(AVAudioRecorderCurrentTime()) & " long"

Example: put AVAudioRecorderCurrentTime() into fld "Recorded Time in Seconds"

Description: The time in seconds since the beginning of the recording




Name: AVAudioRecorderDeviceTime

Type: handler

Syntax: AVAudioRecorderDeviceTime()

Summary: Returns the current time per the host machine or device.

Example:
function SecsToHrsMinSecs pSecs
   lock screen
   split pSecs by "."
   put trunc(pSecs[1]) into deltaTime
   put trunc(deltaTime div 3600) into h -- hours
   put trunc((deltaTime - (h * 3600)) / 60) into m -- minutes
   put deltaTime - (h * 3600) - (m * 60) into s -- seconds
   put format( "%01i:%02i:%02i", h, m, s ) &":"& pSecs[2] into displayTime
   return displayTime
end SecsToHrsMinSecs
put "The current time is" & SecsToHrsMinSecs(AVAudioRecorderDeviceTime())

Example: put AVAudioRecorderDeviceTime() into fld "Recording start time"

Description: Use the returned value to schedule audio recording start time and duration.




Name: AVAudioRecorderStop

Type: handler

Syntax: AVAudioRecorderStop()

Summary: Stops Recording.

Example: AVAudioRecorderStop

Parameters: 

Description: Stops AVAudioRecorder from recording.




