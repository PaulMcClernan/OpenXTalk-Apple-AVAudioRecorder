import module org.openxtalk.avaudiorecorder.paulmcclernan
  use com.livecode.objc
  use com.livecode.foreign
  use com.livecode.engine
  use com.livecode.arithmetic
  use com.livecode.binary
  use com.livecode.list
  use com.livecode.logic
  use com.livecode.string
  use com.livecode.type
  use com.livecode.system
  use com.livecode.array
  use com.livecode.byte
  use com.livecode.char
  use com.livecode.math
  handler AVAudioRecorderStopCallback(in pBlock as Pointer) returns optional any
  handler AVAudioRecorderInitCallback() returns optional any
  handler AVAudioRecorderRemoveCallback() returns optional any
  handler AVAudioRecorderPrepare(in pRecordToFilePath as String) returns optional Boolean
  handler RequestPermissionsCompletionHandler(in pBlock as Pointer, in pGranted as CBool) returns optional any
  handler AVAudioRecorderStop() returns nothing
  handler AVAudioRecorderPause() returns nothing
  handler AVAudioRecorderRecord() returns optional any
  handler AVAudioRecorderDeleteRecording() returns optional any
  handler AVAudioRecorderIsRecording() returns Boolean
  handler AVAudioRecorderCurrentTime() returns optional any
  handler AVAudioRecorderDeviceTime() returns optional any
  handler AVAudioRecorderGetMeteringEnable(in pEnable as Boolean) returns optional any
  handler AVAudioRecorderGetMeteringIsEnable() returns optional any
  handler AVAudioRecorderUpdateMeters() returns nothing
  handler AVAudioRecorderMeterAverageForChan(in pChan as optional CUInt) returns optional any
  handler AVAudioRecorderMeterPeakForChan(in pChan as optional CUInt) returns optional any
  handler getIntegerFromFourCharCodeLittleEndian(in pStr as String) returns optional UInt32
  handler getIntegerFromFourCharCodeBigEndian(in pStr as String) returns optional UInt32
  handler getFourCharCodeFromUint32(in pNum as optional any) returns optional String
  foreign handler objC_NSObjectsGetClassDescriptionForClass(in pClasss as ObjcId) returns optional ObjcRetainedId
  foreign type ClassPropertiesList
  handler LogNSObjectClassName(in pNSObj as optional ObjcId) returns optional any
  handler GetNSObjectClassName(in tNSObj as optional ObjcId) returns optional String
  handler LogNSObjectReflection(in pNSObj as optional ObjcId) returns optional any
end module
